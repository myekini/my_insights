name: CI/CD Pipeline for Frappe Insights

on:
  push:
    branches:
      - staging

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 816069156617
  ECR_REPOSITORY: earnipay/dashboard
  ECS_CLUSTER: earnipay-cluster
  ECS_SERVICE: earnipay-service

jobs:
  # Job 1: Application deployment
  build_and_deploy_application:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Build, Tag, and Push Docker Images
      - name: Build, Tag, and Push Docker Images
        id: build_and_tag_images
        run: |
          cd docker
          docker-compose build
          docker tag frappe/bench:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:frappe-staging-${{ github.sha }}
          docker tag mariadb:10.8 ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:mariadb-staging-${{ github.sha }}
          docker tag redis:alpine ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:redis-staging-${{ github.sha }}
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:frappe-staging-${{ github.sha }}
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:mariadb-staging-${{ github.sha }}
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:redis-staging-${{ github.sha }}


      # # Update ECS Service with new images
      # - name: Update ECS Task Definitions and Deploy
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     service: ${{ env.ECS_SERVICE }}
      #     cluster: ${{ env.ECS_CLUSTER }}
      #     wait-for-service-stability: true
      #     task-definition: |
      #       family: frappe-staging
      #       containerDefinitions:
      #         - name: frappe
      #           image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:frappe-staging-${{ github.sha }}
      #         - name: mariadb
      #           image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:mariadb-staging-${{ github.sha }}
      #         - name: redis
      #           image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:redis-staging-${{ github.sha }}

    # Save the image tags for later use in the CDK deployment
    outputs:
      FRAPPE_TAG: ${{ steps.build_and_tag_images.outputs.FRAPPE_TAG }}
      MARIADB_TAG: ${{ steps.build_and_tag_images.outputs.MARIADB_TAG }}
      REDIS_TAG: ${{ steps.build_and_tag_images.outputs.REDIS_TAG }}